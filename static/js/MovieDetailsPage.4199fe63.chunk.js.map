{"version":3,"file":"static/js/MovieDetailsPage.4199fe63.chunk.js","mappings":"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","sources":["api/moviesAPI.js","webpack://movies-finder/./src/views/MovieDetailsPage/MovieDetailsPage.module.scss?dc7d","webpack://movies-finder/./src/components/Cast/Cast.module.scss?0e19","webpack://movies-finder/./src/components/Cast/CastItem/CastItem.module.scss?b886","components/Cast/CastItem/CastItem.jsx","components/Cast/Cast.jsx","webpack://movies-finder/./src/components/Reviews/Reviews.module.scss?0ade","webpack://movies-finder/./src/components/Reviews/ReviewsItem/ReviewsItem.module.scss?2629","components/Reviews/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesAPI = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst API_KEY = '9eaa0de4edff59e756e1f2cf3f96cfd3';\n\nexport const fetchTrending = (page = 1) => {\n  return moviesAPI\n    .get(`trending/all/week?api_key=${API_KEY}&page=${page}`)\n    .then(resp => resp.data);\n};\n\nexport const fetchMovieDetails = movieID => {\n  return moviesAPI\n    .get(`/movie/${movieID}?api_key=${API_KEY}`)\n    .then(resp => resp.data);\n};\n\nexport const fetchMovieCast = movieID => {\n  return moviesAPI\n    .get(`/movie/${movieID}/credits?api_key=${API_KEY}`)\n    .then(resp => resp.data);\n};\n\nexport const fetchMovieReviews = movieID => {\n  return moviesAPI\n    .get(`/movie/${movieID}/reviews?api_key=${API_KEY}`)\n    .then(resp => resp.data);\n};\n\nexport const fetchMovieBySearchQuery = (query, page = 1) => {\n  return moviesAPI\n    .get(`/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`)\n    .then(resp => resp.data);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsPage\":\"MovieDetailsPage_movieDetailsPage__2VMyt\",\"movieDetailsContent\":\"MovieDetailsPage_movieDetailsContent__ovgPN\",\"movieMainInfo\":\"MovieDetailsPage_movieMainInfo__XDuAk\",\"moviePoster\":\"MovieDetailsPage_moviePoster__JMfIf\",\"movieDescription\":\"MovieDetailsPage_movieDescription__bSNk2\",\"movieTitle\":\"MovieDetailsPage_movieTitle__WiTtu\",\"movieInfoField\":\"MovieDetailsPage_movieInfoField__tsvZO\",\"movieInfoFieldTitle\":\"MovieDetailsPage_movieInfoFieldTitle__cvjJU\",\"movieOverview\":\"MovieDetailsPage_movieOverview__pGRlO\",\"OverviewTitle\":\"MovieDetailsPage_OverviewTitle__KChNE\",\"overviewText\":\"MovieDetailsPage_overviewText__FJ3Jt\",\"movieAdditionalInfo\":\"MovieDetailsPage_movieAdditionalInfo__8yDTS\",\"movieAdditionalInfoLinks\":\"MovieDetailsPage_movieAdditionalInfoLinks__oKSfM\",\"movieAdditionalInfoTitle\":\"MovieDetailsPage_movieAdditionalInfoTitle__mgNHg\",\"linksList\":\"MovieDetailsPage_linksList__S+LSf\",\"movieAdditionalInfoLink\":\"MovieDetailsPage_movieAdditionalInfoLink__mkLsy\",\"backBtn\":\"MovieDetailsPage_backBtn__da1x3\",\"movieAdditionalContent\":\"MovieDetailsPage_movieAdditionalContent__6C6TQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__uOYKn\"};","// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"CastItem_castItem__wo+5-\",\"actorImage\":\"CastItem_actorImage__yIiUB\",\"actorName\":\"CastItem_actorName__h2MjF\",\"actorRole\":\"CastItem_actorRole__kL+MD\"};","import s from './CastItem.module.scss';\n\nconst CastItem = ({ actor }) => {\n  return (\n    <li className={s.castItem}>\n      <div className={s.actorImage}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500` + actor.profile_path}\n          alt=\"\"\n        />\n      </div>\n      <p className={s.actorName}>{actor.name}</p>\n      <p className={s.actorRole}>{actor.character}</p>\n    </li>\n  );\n};\n\nexport default CastItem;\n","import { fetchMovieCast } from 'api/moviesAPI';\nimport Loader from 'components/Loader/Loader';\nimport { Component } from 'react';\nimport s from './Cast.module.scss';\nimport CastItem from './CastItem/CastItem';\n\nclass Cast extends Component {\n  state = {\n    castActors: [],\n  };\n\n  setCastActors = cast => {\n    let actorsWithPhoto = [];\n\n    cast.forEach(achtor => {\n      if (achtor.profile_path) {\n        actorsWithPhoto.push(achtor);\n      }\n    });\n\n    this.setState({\n      castActors: [...actorsWithPhoto],\n    });\n  };\n\n  componentDidMount() {\n    fetchMovieCast(this.props.match.params.movieID).then(({ cast }) =>\n      this.setCastActors(cast)\n    );\n  }\n\n  render() {\n    const { castActors } = this.state;\n\n    if (castActors.length === 0) return <Loader />;\n\n    return (\n      <ul className={s.cast}>\n        {castActors.map(actor => (\n          <CastItem key={actor.id} actor={actor} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"noRewiesMessage\":\"Reviews_noRewiesMessage__vqP8L\"};","// extracted by mini-css-extract-plugin\nexport default {\"reviewsItem\":\"ReviewsItem_reviewsItem__g35R+\",\"reviewHeader\":\"ReviewsItem_reviewHeader__w2Nlv\",\"reviewHeaderTitle\":\"ReviewsItem_reviewHeaderTitle__+drsd\",\"reviewAuthorName\":\"ReviewsItem_reviewAuthorName__0Tk5u\",\"reviewDateNumber\":\"ReviewsItem_reviewDateNumber__dJu6g\",\"reviewContent\":\"ReviewsItem_reviewContent__rQtIg\"};","import s from './ReviewsItem.module.scss';\n\nconst ReviewsItem = ({ review }) => {\n  return (\n    <li className={s.reviewsItem}>\n      <div className={s.reviewHeader}>\n        <span className={s.reviewAuthor}>\n          <span className={s.reviewHeaderTitle}>Author: </span>\n          <span className={s.reviewAuthorName}>{review.author}</span>\n        </span>\n        <span className={s.reviewDate}>\n          <span className={s.reviewHeaderTitle}>Date: </span>\n          <span className={s.reviewDateNumber}>\n            {review.created_at.slice(0, 10)}\n          </span>\n        </span>\n      </div>\n      <div className={s.reviewContent}>{review.content}</div>\n    </li>\n  );\n};\n\nexport default ReviewsItem;\n","import { fetchMovieReviews } from 'api/moviesAPI';\nimport Loader from 'components/Loader/Loader';\nimport { Component } from 'react';\nimport s from './Reviews.module.scss';\nimport ReviewsItem from './ReviewsItem/ReviewsItem';\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    fetchMovieReviews(this.props.match.params.movieID)\n      .then(({ results }) => this.setState({ reviews: [...results] }))\n      .catch(console.log)\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  render() {\n    const { isLoading, reviews } = this.state;\n\n    if (isLoading) return <Loader />;\n    if (reviews.length === 0 && !isLoading) {\n      return <div className={s.noRewiesMessage}>There is no reviews!</div>;\n    }\n    return (\n      <ul className={s.reviews}>\n        {reviews.map(review => (\n          <ReviewsItem key={review.id} review={review} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Reviews;\n","import s from './MovieDetailsPage.module.scss';\nimport { Component } from 'react';\nimport { fetchMovieDetails } from 'api/moviesAPI';\nimport Loader from 'components/Loader/Loader';\nimport { NavLink, Route } from 'react-router-dom';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\nimport routes from 'routes';\n\nclass MovieDetailsPage extends Component {\n  state = {\n    movieDetails: null,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    const movieID = this.props.match.params.movieID;\n\n    fetchMovieDetails(movieID)\n      .then(movieDetails => this.setState({ movieDetails }))\n      .catch(console.log)\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  goBack = () => {\n    this.props.history.push(this.props.location?.state?.from || '/movies');\n  };\n\n  render() {\n    if (this.state.isLoading) return <Loader />;\n\n    const {\n      backdrop_path,\n      poster_path,\n      original_title,\n      release_date,\n      vote_average,\n      genres,\n      homepage,\n      overview,\n    } = this.state.movieDetails;\n\n    return (\n      <div\n        className={s.movieDetailsPage}\n        style={{\n          backgroundColor: `rgba(255, 255, 255, 0.342)`,\n          background: `url(https://image.tmdb.org/t/p/original${backdrop_path})`,\n          backgroundSize: `cover`,\n          backgroundAttachment: 'fixed',\n        }}\n      >\n        <div className=\"container\">\n          <div className={s.movieDetailsContent}>\n            <button className={s.backBtn} onClick={this.goBack}>\n              Back{' '}\n            </button>\n            <div className={s.movieMainInfo}>\n              <div className={s.moviePoster}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt=\"\"\n                />\n              </div>\n              <div className={s.movieDescription}>\n                <h2 className={s.movieTitle}>{original_title}</h2>\n                <p className={s.movieInfoField}>\n                  <span className={s.movieInfoFieldTitle}>Release date:</span>{' '}\n                  {release_date}\n                </p>\n                <p className={s.movieInfoField}>\n                  <span className={s.movieInfoFieldTitle}>Rating:</span>{' '}\n                  {vote_average * 10}%\n                </p>\n                <div className={s.movieInfoField}>\n                  <div className={s.movieInfoFieldTitle}>Ganres:</div>\n                  {genres.map(ganre => ganre.name + ' ')}\n                </div>\n                <div className={s.movieInfoField}>\n                  <div className={s.movieInfoFieldTitle}>Homepage:</div>\n                  <a target=\"_blank\" href={homepage} rel=\"noreferrer\">\n                    {homepage}\n                  </a>\n                </div>\n                <div className={s.movieOverview}>\n                  <h3 className={s.OverviewTitle}>Overview:</h3>\n                  <p className={s.overviewText}>{overview}</p>\n                </div>\n              </div>\n            </div>\n            <div className={s.movieAdditionalInfoLinks}>\n              <h3 className={s.movieAdditionalInfoTitle}>\n                Additional information:\n              </h3>\n              <ul className={s.linksList}>\n                <li className={s.linksItem}>\n                  <NavLink\n                    className={s.movieAdditionalInfoLink}\n                    to={{\n                      pathname: this.props.match.url + routes.cast,\n                      state: {\n                        from: this.props.location?.state?.from,\n                      },\n                    }}\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li className={s.linksItem}>\n                  <NavLink\n                    className={s.movieAdditionalInfoLink}\n                    to={{\n                      pathname: this.props.match.url + routes.reviews,\n                      state: {\n                        from: this.props.location?.state?.from,\n                      },\n                    }}\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n            <div className={s.movieAdditionalContent}>\n              <Route\n                path={this.props.match.path + routes.cast}\n                component={Cast}\n              />\n              <Route\n                path={this.props.match.path + routes.reviews}\n                component={Reviews}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n"],"names":["moviesAPI","axios","baseURL","API_KEY","fetchTrending","page","get","then","resp","data","fetchMovieDetails","movieID","fetchMovieCast","fetchMovieReviews","fetchMovieBySearchQuery","query","actor","className","s","src","profile_path","alt","name","character","Cast","state","castActors","setCastActors","cast","actorsWithPhoto","forEach","achtor","push","setState","this","props","match","params","length","Loader","map","id","Component","review","author","created_at","slice","content","Reviews","reviews","isLoading","results","catch","console","log","finally","MovieDetailsPage","movieDetails","goBack","history","location","from","backdrop_path","poster_path","original_title","release_date","vote_average","genres","homepage","overview","style","backgroundColor","background","backgroundSize","backgroundAttachment","onClick","ganre","target","href","rel","to","pathname","url","routes","path","component"],"sourceRoot":""}